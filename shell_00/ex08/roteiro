Certo, vamos analisar o comando find:

Bash

find . \( -name '*~' -o -name '#*#' \) -print -delete
O comando find é usado para procurar arquivos em uma hierarquia de diretórios.

find .:

find: É o comando para procurar arquivos.
.: Especifica o diretório onde a busca começará. O ponto (.) representa o diretório atual. Portanto, a busca será feita no diretório atual e em todos os seus subdiretórios.
\( -name '*~' -o -name '#*#' \):

Esta parte especifica os critérios de busca (os arquivos que o find deve encontrar).
( e ): Agrupam as condições, assim como parênteses em matemática, para controlar a ordem de avaliação. Eles geralmente precisam ser escapados com uma barra invertida (\( e \) no shell para evitar que sejam interpretados pelo shell.
-name '*~': Procura arquivos cujo nome termina com ~. Essa convenção é frequentemente usada por alguns editores de texto (como o Emacs) para arquivos de backup. O asterisco (*) é um curinga que corresponde a qualquer sequência de caracteres.
-o: É o operador "OR". Um arquivo será correspondido se a condição à esquerda ou a condição à direita for verdadeira.
-name '#*#': Procura arquivos cujo nome começa com # e termina com #, com qualquer coisa no meio. Essa convenção também é usada por alguns editores (como o Emacs) para arquivos de lock ou backup.
-print:

Esta opção faz com que o find imprima o nome do caminho completo de cada arquivo que corresponda aos critérios especificados. Embora -print seja o comportamento padrão em algumas versões do find se nenhuma outra ação for especificada, aqui ele está explícito.
-delete:

Esta opção faz com que o find apague os arquivos que correspondem aos critérios. Use esta opção com extrema cautela, pois os arquivos serão removidos permanentemente. Ela é executada para cada arquivo que é encontrado e para o qual todas as condições anteriores são verdadeiras.